from kivy.app import App
from kivy.lang import Builder
from kivy.uix.boxlayout import BoxLayout
from kivy.core.window import Window
root = Builder.load_string('''
<Calculator>:
	orientation:'vertical'
	TextInput:
		size_hint_y:.4
		id:Text
		multiline:False
		text:""
	BoxLayout:
		orientation:'horizontal'
		GridLayout:
			rols:4
			cols:3
			Button:
				text:'7'
				on_press:Text.text+="7"
			Button:
				text:'8'
				on_press:Text.text+="8"
			Button:
				text:'9'
				on_press:Text.text+="9"
			Button:
				text:'4'
				on_press:Text.text +="4"
			Button:
				text:'5'
				on_press:Text.text +="5"
			Button:
				text:'6'
				on_press:Text.text +="6"
			Button:
				text:'1'
				on_press:Text.text +="1"
			Button:
				text:'2'
				on_press:Text.text +="2"
			Button:
				text:'3'
				on_press:Text.text +="3"
			Button:
				text:'.'
				on_press:Text.text +="."
			Button:
				text:"0"
				on_press:Text.text +="0"
			Button:
				text:"="
				on_press:root.equal()
		BoxLayout:
			orientation:'vertical'
			Button:
				text:'Cancel'
				on_press:root.Cancel()
			Button:
				text:'/'
				on_press:Text.text += '/'
			Button:
				text:'*'
				on_press:Text.text += '*'
			Button:
				text:'-'
				on_press:Text.text += '-'
			Button:
				text:'+'
				on_press:Text.text += '+'
			Button:
				text:'zoom out'
				id:beans
				on_press:root.zoom()
					
''')
Window.clearcolor=(1,.5,0,.2)
class Calculator(BoxLayout):
	
	def __init__(self,**kwargs):
		BoxLayout.__init__(self,**kwargs)
		self.padding = 100
	
	
	def zoom(self):
		
		if self.padding[0] == 100:
			self.padding = 0
			self.ids.beans.text = "zoom in"
		else:
			self.ids.beans.text = "zoom out "
			self.padding = 100
	
	def Cancel(self):
		 	try:
		 		chr = [i for i in str(self.ids.Text.text)]
		 		del chr[-1]
		 		Current_text= "".join(chr)
		 		self.ids.Text.text = Current_text
		 	except TypeError:
		 		self.ids.Text.text = ''
		 	except IndexError:
		 		self.ids.Text.text  = ''
		 	except AttributeError:
		 		self.ids.Text.text = ''
		 	
	def equal(self):
		 try:
		 	num = self.ids.Text.text
		 	num = eval(str(num))
		 	self.ids.Text.text = f"Ans ={num}"
		 except AttributeError:
		 	self.ids.Text.text = "fuck you"
		 except ZeroDivisionError:
		 	self.ids.Text.text = "Math Error"
		 except NameError:
		 	self.ids.Text.text = "Cancel text please"
		 except SyntaxError:
		 	self.ids.Text.text = 'Cancel text please'
		 except TypeError:
		 	self.ids.Text.text = 'Cancel text please'
		 	
		
class DemoApp(App):
	def build(self):
		return Calculator()
DemoApp().run()